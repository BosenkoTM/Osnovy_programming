
# Задание task_03_04_05.
#
# Выполнил: Фамилия И.О.
# Группа: !!!



class NoSuchSeatError(Exception):
    def __init__(self, message):
        super().__init__(message)


def load_seats(filename):
    """Загрузить данные о местах в зале из файла 'filename'.

    Результат: list of list вида:

        [
            [0, 0, 1],     # 1 ряд, первые 2 места свободны
            [1, 1, 1, 1],  # 2 ряд, все места заняты
            ...
        ]

    Функция не обрабатывает исключения."""
    # Удалите комментарий и допишите код


def vacant_seats(seats):
    """Вернуть количество свободных мест в 'seats'.

    Параметры:
        - seats (list of list): данные из load_seats().

    Результат:
        - int: количество свободных мест.
    """
    # Удалите комментарий и допишите код


def is_seat_vacant(seats, n_p, m_p):
    """Вернуть True, если место свободно.

    Параметры:
        - seats (list of list): данные из load_seats();
        - n_p (int): номер ряда (индексация с 0);
        - m_p (int): номер места (индексация с 0).

    Результат:
        - True/False: место свободно/нет.

    Исключения:
        - NoSuchSeatError: если места с указанными параметрами не существует.
    """
    # Удалите комментарий и допишите код


# Добавьте в код обработку исключений
filename = input("Введите имя файла: ")
seats = load_seats(filename)

count = vacant_seats(seats)
print("Всего свободных мест: {}".format(count))

# Ввод значений для поиска
# Учитывайте, что пользователь привык считать с 1, а не с 0,
# поэтому введенные сообщения необходимо скорректировать
n_p, m_p = [int(item) for item in
            input("Введите ряд и место через пробел: ").split()]

print("Место свободно:",
      "Да" if is_seat_vacant(seats, n_p - 1, m_p - 1) else "Нет")
